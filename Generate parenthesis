class Solution:
    def generateParenthesis(self, n: int):
        
        ans = []
        self._generate(0, 0, n, "", ans)
        return ans

    def _generate(self, open_count: int, close_count: int, n: int, current: str, ans: list):
       
       
        if open_count == close_count == n:
            ans.append(current)
            return

        if open_count < n:
            self._generate(open_count + 1, close_count, n, current + '(', ans)

      
        if close_count < open_count:
            self._generate(open_count, close_count + 1, n, current + ')', ans)
